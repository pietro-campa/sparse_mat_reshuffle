def sparse_swap(mat, nodes_right, nodes_wrong):
    """
    Parameters
    ----------
    mat : csr matrix
    nodes_right : a list with the desired ordering 
    nodes_wrong : a list with the current ordering

    Returns
    -------
    A new csr matrices where columns and rows have
    been reordered to match the ordering contained in 
    nodes_right.
    It requires to specify the current order of nodes.
    Created to rearrange adiacency Matrices in order
    to have them comparable across different layers of 
    the same graph.
    """
    shifter = []
    i = 0
    while i < len(nodes_wrong): 
        ind = nodes_right.index(nodes_wrong[i])
        S = ind - i
        shifter.append(S)
        i = i + 1
    print(shifter)
        
    cols = mat.indices.copy()
    i = 0
    while i < len(shifter): 
        new = i + shifter[i]
        cols[mat.indices == i] = new   
        i = i + 1
        
    mat.indices = cols
    
    mat = mat.tocsc()

    rows = mat.indices.copy()
    i = 0
    while i < len(shifter): 
        new = i + shifter[i]
        rows[mat.indices == i] = new   
        i = i + 1

    mat.indices = rows
    return mat
